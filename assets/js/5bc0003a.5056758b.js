"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[635],{29122:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=i(74848),r=i(28453);const o={sidebar_position:2},s="System Block Diagram",a={id:"requirements/system-block-diagram",title:"System Block Diagram",description:"image",source:"@site/docs/requirements/system-block-diagram.md",sourceDirName:"requirements",slug:"/requirements/system-block-diagram",permalink:"/project-whiteboardflow/docs/requirements/system-block-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-whiteboardflow/edit/main/documentation/docs/requirements/system-block-diagram.md",tags:[],version:"current",lastUpdatedBy:"VinceLukban",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Overview",permalink:"/project-whiteboardflow/docs/requirements/system-overview"},next:{title:"General Requirements",permalink:"/project-whiteboardflow/docs/requirements/general-requirements"}},c={},d=[{value:"Figure 1. High-level design of the WhiteboardFlow application.",id:"figure-1-high-level-design-of-the-whiteboardflow-application",level:4}];function l(e){const t={h1:"h1",h4:"h4",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"system-block-diagram",children:"System Block Diagram"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://github.com/user-attachments/assets/c09771ff-74f3-43cf-8eec-655b3c5f7fbf",alt:"image"})}),"\n",(0,n.jsx)(t.h4,{id:"figure-1-high-level-design-of-the-whiteboardflow-application",children:"Figure 1. High-level design of the WhiteboardFlow application."}),"\n",(0,n.jsx)(t.p,{children:"Figure 1 provides an overview of the WhiteboardFlow application architecture. Users interact with the system via mobile devices, using a stylus or touch input to simulate a whiteboard experience. The front-end, built with React (HTML5 and JavaScript), handles the user interface, enabling whiteboard drawing with the Canvas API or SVG. The backend, developed in Node.js, manages API requests and real-time communication. AI/ML components, powered by openAI, process handwriting recognition, solution analysis, and natural language processing. Firebase securely stores user data, progress, and question banks, while user authentication is managed through Single Sign-On (SSO) with Facebook or Google. Feedback and guidance are displayed in real-time on the user's device, enhancing the learning experience."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(96540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);