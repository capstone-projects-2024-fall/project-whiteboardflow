"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[4933],{4354:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(74848),i=s(28453);const r={sidebar_position:2},a="Class Diagrams",o={id:"system-architecture/Class Diagrams",title:"Class Diagrams",description:"",source:"@site/docs/system-architecture/Class Diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/Class Diagrams",permalink:"/project-whiteboardflow/docs/system-architecture/Class Diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-whiteboardflow/edit/main/documentation/docs/system-architecture/Class Diagrams.md",tags:[],version:"current",lastUpdatedBy:"VinceLukban",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Component Descriptions",permalink:"/project-whiteboardflow/docs/system-architecture/Component Descriptions"},next:{title:"Sequence Diagrams",permalink:"/project-whiteboardflow/docs/system-architecture/Sequence Diagrams"}},c={},d=[];function m(n){const e={h1:"h1",mermaid:"mermaid",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"class-diagrams",children:"Class Diagrams"}),"\n",(0,t.jsx)(e.mermaid,{value:"classDiagram\n\n  App --\x3e Main"}),"\n",(0,t.jsx)(e.mermaid,{value:'classDiagram\n\n%% Class definitions\n\nclass User {\n  +String userID\n  +String name\n  +String email\n  +String password\n  +List<QuestionHistory> questionHistory\n  +login()\n  +register()\n}\n\nclass Question {\n  +String questionID\n  +String questionText\n  +String questionType\n  +List<TestCase> testCases\n  +submitAnswer()\n  +getFeedback()\n}\n\nclass QuestionHistory {\n  +String questionID\n  +String answer\n  +Date timestamp\n  +boolean isCorrect\n  +String feedback\n}\n\nclass Whiteboard {\n  +String whiteboardID\n  +String sessionID\n  +void draw()\n  +void erase()\n}\n\nclass Microphone {\n  +String micID\n  +String sessionID\n  +void startRecording()\n  +void stopRecording()\n  +String analyzeSpeech()\n}\n\nclass AI {\n  +String aiID\n  +String sessionID\n  +void analyzeHandwriting()\n  +void provideFeedback()\n  +void assistUser()\n}\n\nclass Backend {\n  +void handleAPIRequest()\n  +void handleRealTimeComms()\n}\n\nclass Frontend {\n  +void renderUI()\n  +void useCanvasAPI()\n  +void useSVG()\n}\n\n%% Associations and relationships\n\nUser "1" --* "many" QuestionHistory : logs\nUser "1" --o "many" Whiteboard : uses\nWhiteboard "1" --o "1" Microphone : has\nQuestion "1" --o "many" TestCase : contains\nWhiteboard "1" --|> Frontend : inherits\nMicrophone "1" --|> Backend : inherits\nAI "1" --|> Backend : interfaces with\nUser "1" --o "many" AI : receives feedback from\nBackend "1" --|> Flask\nBackend "1" --|> Django\nFrontend "1" --|> ReactJS\n\n'})]})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>o});var t=s(96540);const i={},r=t.createContext(i);function a(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);